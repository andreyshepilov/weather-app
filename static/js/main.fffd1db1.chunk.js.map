{"version":3,"sources":["components/CurrentWeather/CurrentWeather.module.scss","pages/LocationSelectionPage/LocationSelectionPage.module.scss","helpers/utils.js","store/forecast/actions.js","store/forecast/reducer.js","store/rootReducer.js","api/api.js","api/index.js","store/forecast/sagas.js","store/rootSaga.js","store/store.js","componentsCommon/history/index.js","constants/routes.js","componentsCommon/PageErrorBoundary/PageErrorBoundary.jsx","componentsCommon/Header/Header.js","componentsCommon/Footer/Footer.js","layouts/CommonLayout/CommonLayout.jsx","components/LocationInfo/LocationInfo.jsx","components/CurrentWeather/CurrentWeather.jsx","components/DayCard/DayCard.jsx","components/ForecastedWeather/ForecastedWeather.jsx","components/ThreeHourCard/ThreeHourCard.jsx","components/DayForecastDetails/DayForecastDetails.jsx","componentsCommon/AnimatedContainer/AnimatedContainer.jsx","components/HourForecastDetails/HourForecastDetails.jsx","pages/ForecastPage/ForecastPage.jsx","components/PlaceSelectionForm/PlaceSelectionForm.jsx","components/CoordinateSelectionForm/CoordinateSelectionForm.jsx","pages/LocationSelectionPage/LocationSelectionPage.jsx","RootRouter/RootRouter.jsx","layouts/TopLevelLayout/TopLevelLayout.jsx","App.js","serviceWorker.js","index.js","components/ThreeHourCard/ThreeHourCard.module.scss","components/HourForecastDetails/HourForecastDetails.module.scss","assets/icons/pressure-1.svg","components/DayForecastDetails/DayForecastDetails.module.scss","assets/icons/cloud-1.svg","pages/ForecastPage/ForecastPage.module.scss","componentsCommon/Header/Header.module.scss","assets/icons/humidity.svg","assets/icons/cloud-2.svg","assets/icons/wind.svg","assets/icons/thermometer.svg","layouts/CommonLayout/CommonLayout.module.scss","assets/icons/drop.svg","assets/icons/snowflake.svg","assets/icons/wind-direction.svg","assets/icons/time-left.svg","components/LocationInfo/LocationInfo.module.scss","components/ForecastedWeather/ForecastedWeather.module.scss","components/PlaceSelectionForm/PlaceSelectionForm.module.scss","components/CoordinateSelectionForm/CoordinateSelectionForm.module.scss","componentsCommon/PageErrorBoundary/PageErrorBoundary.module.scss","componentsCommon/Footer/Footer.module.scss","components/DayCard/DayCard.module.scss","assets/icons/sunrise.svg","assets/icons/sunset.svg","assets/images/rain-316579_1280.jpg","layouts/TopLevelLayout/TopLevelLayout.module.scss"],"names":["module","exports","handleRequestError","errors","handleNotification","status","get","ejectErrorMessage","msg","action","info","success","dismiss","error","toast","createActions","SET_SELECTED_LOCATION","lat","lon","GET_CURRENT_WEATHER","START","undefined","SUCCESS","data","FAILURE","GET_FORECASTED_WEATHER","averagedData","dayDataSequence","hourDataSequences","SHOW_DAY_FORECAST_DETAILS","dayId","HIDE_DAY_FORECAST_DETAILS","SHOW_HOUR_FORECAST_DETAILS","hourId","HIDE_HOUR_FORECAST_DETAILS","prefix","setSelectedLocation","getCurrentWeather","getForecastedWeather","showDayForecastDetails","hideDayForecastDetails","showHourForecastDetails","hideHourForecastDetails","forecastReducer","handleActions","actions","state","payload","selectedLocation","start","currentWeather","loading","dataIsLoaded","failure","forecastedWeather","dayDetailsSectionIsOpened","selectedDayId","hourDetailsSectionIsOpened","selectedHourId","combineReducers","forecast","api","domain","options","this","axios","create","baseURL","forEach","method","_createRequest","url","body","config","a","response","process","wetherCurrentGet","params","wetherForecastedGet","forecastSagas","put","call","key","forecastList","allDaysList","el","push","moment","unix","dt","format","uniqueDaysList","filter","elem","index","self","indexOf","daysSets","item","objectifiedData","hasOwnProperty","objectifiedDaySet","hourDataSequence","map","findMin","selector","arrData","Math","min","apply","findMax","max","findMostly","extractedItemsArr","_","head","countBy","entries","maxBy","last","minTemp","maxTemp","minPressure","maxPressure","minHumidity","maxHumidity","mostlyWeatherDescription","mostlyWeatherIcon","minClouds","maxClouds","minSpeed","maxSpeed","all","takeEvery","rootSaga","fork","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","onError","console","log","store","createStore","rootReducer","applyMiddleware","run","createBrowserHistory","ROUTES","REDIRECT_URL","SELECT_LOCATION","FORECAST","PageErrorBoundary","props","hasError","errorMessage","className","styles","heading","children","JSON","stringify","React","Component","Header","rootWrapper","logo","onClick","history","half","left","right","Footer","rights","href","title","CommonLayout","page","container","mainContentWrapper","LocationInfo","useSelector","cityNameFromCurrent","cityNameFromForecasted","countryCodeFromCurrent","countryCodeFromForecasted","topWrapper","backButton","CurrentWeather","dataList","useState","detailsIsOpened","setDetailsIsOpened","weatherConditionDescription","weatherConditionIconCode","mainTemp","atmPressureMain","atmPressureSea","atmPressureGround","humidity","windSpeed","windDirection","cloudiness","rainVolume1","rainVolume3","snowVolume1","snowVolume3","calculationTime","sunriseTime","sunsetTime","additionalParamsData","atmPressureLogo","logoAltText","text","value","humidityLogo","cloudinessLogo","windSpeedLogo","windDirectionLogo","rainVolumeLogo","snowVolumeLogo","calculationTimeLogo","sunriseLogo","sunsetLogo","pageHeading","tempWeatherWrapper","temperatureSection","temperatureMinMax","temperatureMain","weatherConditionSection","weatherConditionIconWrapper","src","alt","cloudLogo","type","classNames","showMoreButton","showMoreButtonOpenedState","otherParamsList","otherParamsListOpened","otherParamsItem","infoLogo","infoText","DayCard","cardId","dispatch","useDispatch","useEffect","setIsActive","dayData","isActive","formattedDayDate","Object","keys","rootWrapperActive","currentDate","temperatureRow","temperatureHalfSection","temperaturePrefix","temperatureValue","temperaturePostfix","forecastActions","ForecastedWeather","cardListWrapper","dayCardWrapper","ThreeHourCard","thisHourData","forecastTime","rootWrapperOpened","DayForecastDetails","thisDayDataSequence","paramsData","temperatureLogo","infoNode","paramsList","paramsItem","threeHourCardWrapper","closeButton","AnimatedContainer","show","render","setRender","style","animation","onAnimationEnd","HourForecastDetails","rainVolume","snowVolume","ForecastPage","dayDetailsOpened","hourDetailsOpened","currentWeatherLoading","locationCurrentWeatherSection","locationInfoWrapper","currentWeatherWrapper","forecastedWeatherSection","dayDetailsSection","hourDetailsSection","PlaceSelectionForm","location","setLocation","autocompleteWrapper","placeholder","language","countries","onChange","query","rawAnswer","suggestion","suggestionIndex","name","submitButton","CoordinateSelectionForm","e","target","form","htmlFor","id","LocationSelectionPage","activeLocationForm","setActiveLocationForm","onFormSelectorChange","formsWrapper","formsWrapperAutocompleteActive","formsWrappercoordinateSelectionActive","autocompleteWrapperActive","coordinateSelectionWrapper","coordinateSelectionWrapperActive","formSelectionWrapper","checked","checkmark","mapStyles","opacity","transform","scale","bounce","val","spring","stiffness","damping","bounceTransition","atEnter","atLeave","atActive","RootRouter","path","exact","component","from","to","TopLevelLayout","backgroundHolder","backgroundImage","bgImage","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fffd1db1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"CurrentWeather_clearfix__1Mcm9\",\"rootWrapper\":\"CurrentWeather_rootWrapper__1HSnY\",\"showMoreButton\":\"CurrentWeather_showMoreButton__3cpig\",\"pageHeading\":\"CurrentWeather_pageHeading__1NO8P\",\"tempWeatherWrapper\":\"CurrentWeather_tempWeatherWrapper__1J30c\",\"temperatureSection\":\"CurrentWeather_temperatureSection__1kh1Y\",\"temperatureMinMax\":\"CurrentWeather_temperatureMinMax__319sP\",\"temperatureMain\":\"CurrentWeather_temperatureMain__q4OGj\",\"weatherConditionSection\":\"CurrentWeather_weatherConditionSection__3tgO4\",\"weatherConditionIconWrapper\":\"CurrentWeather_weatherConditionIconWrapper__2vvTY\",\"weatherConditionDescription\":\"CurrentWeather_weatherConditionDescription__q10BC\",\"showMoreButtonOpenedState\":\"CurrentWeather_showMoreButtonOpenedState__BWZ2S\",\"otherParamsList\":\"CurrentWeather_otherParamsList__1ixv1\",\"otherParamsListOpened\":\"CurrentWeather_otherParamsListOpened__2NiCh\",\"otherParamsItem\":\"CurrentWeather_otherParamsItem__Jf2-0\",\"infoLogo\":\"CurrentWeather_infoLogo__2K41Q\",\"infoText\":\"CurrentWeather_infoText__bH9s8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"LocationSelectionPage_clearfix__nVzLf\",\"rootWrapper\":\"LocationSelectionPage_rootWrapper__3E6RB\",\"pageHeading\":\"LocationSelectionPage_pageHeading__2-xZh\",\"formsWrapper\":\"LocationSelectionPage_formsWrapper__3FBl5\",\"formsWrapperAutocompleteActive\":\"LocationSelectionPage_formsWrapperAutocompleteActive__1ruuq\",\"formsWrappercoordinateSelectionActive\":\"LocationSelectionPage_formsWrappercoordinateSelectionActive__xy6kA\",\"autocompleteWrapper\":\"LocationSelectionPage_autocompleteWrapper__rJmpc\",\"autocompleteWrapperActive\":\"LocationSelectionPage_autocompleteWrapperActive__2xjQw\",\"coordinateSelectionWrapper\":\"LocationSelectionPage_coordinateSelectionWrapper__iTMfF\",\"coordinateSelectionWrapperActive\":\"LocationSelectionPage_coordinateSelectionWrapperActive__2JP6x\",\"container\":\"LocationSelectionPage_container__xxP97\",\"checkmark\":\"LocationSelectionPage_checkmark__sDwww\"};","import { get } from 'lodash';\nimport { toast } from 'react-toastify';\n\nexport function ejectErrorMessage(errors) {\n  const status = get(errors, 'response.status', 500);\n\n  return get(errors, 'response.data.message', `Erros code #${status}`);\n}\n\nexport function handleRequestError(errors) {\n  handleNotification(ejectErrorMessage(errors), 'error');\n}\n\nexport function handleNotification(msg, type = 'info') {\n  const map = {\n    info: 'info',\n    success: 'success',\n    dismiss: 'dismiss',\n    error: 'error',\n  };\n  const action = map[type];\n\n  if (!action) return;\n\n  return toast[action](msg);\n}\n","import { createActions } from 'redux-actions';\n\nexport const {\n  setSelectedLocation,\n  getCurrentWeather,\n  getForecastedWeather,\n  showDayForecastDetails,\n  hideDayForecastDetails,\n  showHourForecastDetails,\n  hideHourForecastDetails,\n} = createActions(\n  {\n    SET_SELECTED_LOCATION: ({ lat, lon }) => ({ lat, lon }),\n    GET_CURRENT_WEATHER: {\n      START: undefined,\n      SUCCESS: ({ data }) => ({ data }),\n      FAILURE: undefined,\n    },\n    GET_FORECASTED_WEATHER: {\n      START: undefined,\n      SUCCESS: ({\n        data,\n        averagedData,\n        dayDataSequence,\n        hourDataSequences,\n      }) => ({ data, averagedData, dayDataSequence, hourDataSequences }),\n      FAILURE: undefined,\n    },\n    SHOW_DAY_FORECAST_DETAILS: ({ dayId }) => ({ dayId }),\n    HIDE_DAY_FORECAST_DETAILS: undefined,\n    SHOW_HOUR_FORECAST_DETAILS: ({ hourId }) => ({ hourId }),\n    HIDE_HOUR_FORECAST_DETAILS: undefined,\n  },\n  { prefix: 'FORECAST' }\n);\n","import * as actions from './actions';\n\nimport { handleActions } from 'redux-actions';\n\nconst initialState = {\n  selectedLocation: {\n    lat: 0,\n    lon: 0,\n  },\n  currentWeather: {\n    loading: false,\n    data: {},\n  },\n  forecastedWeather: {\n    loading: false,\n    dayDetailsSectionIsOpened: false,\n    selectedDayId: '',\n    hourDetailsSectionIsOpened: false,\n    selectedHourId: '',\n    data: {},\n    averagedData: {},\n    dayDataSequence: [],\n    hourDataSequences: {},\n  },\n  dataIsLoaded: false,\n};\n\nexport const forecastReducer = handleActions(\n  {\n    [actions.setSelectedLocation]: (state, action) => {\n      const { lat, lon } = action.payload;\n\n      return {\n        ...state,\n        selectedLocation: {\n          lat,\n          lon,\n        },\n      };\n    },\n\n    [actions.getCurrentWeather.start]: (state, action) => ({\n      ...state,\n      currentWeather: {\n        ...state.currentWeather,\n        loading: true,\n      },\n    }),\n    [actions.getCurrentWeather.success]: (state, action) => ({\n      ...state,\n      dataIsLoaded: true,\n      currentWeather: {\n        ...state.currentWeather,\n        loading: false,\n        data: action.payload.data,\n      },\n    }),\n    [actions.getCurrentWeather.failure]: (state, action) => ({\n      ...state,\n      currentWeather: {\n        ...state.currentWeather,\n        loading: false,\n      },\n    }),\n\n    [actions.getForecastedWeather.start]: (state, action) => ({\n      ...state,\n      forecastedWeather: {\n        ...state.forecastedWeather,\n        loading: true,\n      },\n    }),\n    [actions.getForecastedWeather.success]: (state, action) => ({\n      ...state,\n      dataIsLoaded: true,\n      forecastedWeather: {\n        ...state.forecastedWeather,\n        loading: false,\n        data: action.payload.data,\n        averagedData: action.payload.averagedData,\n        dayDataSequence: action.payload.dayDataSequence,\n        hourDataSequences: action.payload.hourDataSequences,\n      },\n    }),\n    [actions.getForecastedWeather.failure]: (state, action) => ({\n      ...state,\n      forecastedWeather: {\n        ...state.forecastedWeather,\n        loading: false,\n      },\n    }),\n\n    [actions.showDayForecastDetails]: (state, action) => ({\n      ...state,\n      forecastedWeather: {\n        ...state.forecastedWeather,\n        dayDetailsSectionIsOpened: true,\n        selectedDayId: action.payload.dayId,\n      },\n    }),\n\n    [actions.hideDayForecastDetails]: (state, action) => ({\n      ...state,\n      forecastedWeather: {\n        ...state.forecastedWeather,\n        dayDetailsSectionIsOpened: false,\n        hourDetailsSectionIsOpened: false,\n      },\n    }),\n\n    [actions.showHourForecastDetails]: (state, action) => ({\n      ...state,\n      forecastedWeather: {\n        ...state.forecastedWeather,\n        hourDetailsSectionIsOpened: true,\n        selectedHourId: action.payload.hourId,\n      },\n    }),\n\n    [actions.hideHourForecastDetails]: (state, action) => ({\n      ...state,\n      forecastedWeather: {\n        ...state.forecastedWeather,\n        hourDetailsSectionIsOpened: false,\n      },\n    }),\n  },\n  initialState\n);\n","import { forecastReducer } from './forecast/reducer';\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({\n  forecast: forecastReducer,\n});\n","import axios from 'axios';\n\nexport class API {\n  constructor(domain, options = {}) {\n    this.axios = axios.create({\n      baseURL: domain,\n      ...options\n    });\n\n    const createMethod = method => {\n      this[method] = this._createRequest(method);\n    };\n\n    ['get', 'post', 'patch', 'put', 'delete'].forEach(createMethod);\n  }\n\n  _createRequest(method) {\n    return async function(url, body, config) {\n        const response = await this.axios[method](url, body, config);\n        return (response && response.data) || null;\n    };\n  }\n}\n","import { API } from './api';\n\nconst DOMAIN = process.env.REACT_APP_DOMAIN;\n\nexport const api = new API(DOMAIN);\n\nexport const wetherCurrentGet = params =>\n  api.get(\n    `data/2.5/weather?lat=${params.lat}&lon=${params.lon}&units=metric&appid=${'fcd998ee9c26cfac2118a94f69d9fbcd'}`\n  ); // TODO: move ippid, add custom units feature\n\nexport const wetherForecastedGet = params =>\n  api.get(\n    `data/2.5/forecast?lat=${params.lat}&lon=${params.lon}&units=metric&appid=${'fcd998ee9c26cfac2118a94f69d9fbcd'}`\n  ); // TODO: move ippid, add custom units feature\n","import { get } from 'lodash';\nimport { all, call, put, takeEvery } from 'redux-saga/effects';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport { wetherCurrentGet, wetherForecastedGet } from 'api';\nimport * as actions from './actions';\nimport { handleRequestError } from 'helpers/utils';\n\nexport function* getCurrentWeather(action) {\n  yield put(actions.getCurrentWeather.start());\n\n  const { lat, lon } = action.payload;\n\n  let data;\n\n  try {\n    data = yield call(wetherCurrentGet, {\n      lat,\n      lon,\n    });\n  } catch (errors) {\n    handleRequestError(errors);\n    yield put(actions.getCurrentWeather.failure());\n    return;\n  }\n\n  yield put(\n    actions.getCurrentWeather.success({\n      data: data,\n    })\n  );\n}\n\nexport function* getForecastedWeather(action) {\n  //TODO: rewrite whole saga\n  yield put(actions.getForecastedWeather.start());\n\n  const { lat, lon } = action.payload;\n\n  let data;\n\n  try {\n    data = yield call(wetherForecastedGet, {\n      lat,\n      lon,\n    });\n  } catch (errors) {\n    handleRequestError(errors);\n    yield put(actions.getForecastedWeather.failure());\n    return;\n  }\n\n  const forecastList = get(data, 'list', []);\n  const allDaysList = [];\n\n  forecastList.forEach(el => {\n    allDaysList.push(moment.unix(el.dt).format('D'));\n  });\n\n  const uniqueDaysList = allDaysList.filter((elem, index, self) => {\n    return index === self.indexOf(elem);\n  });\n  const dayDataSequence = uniqueDaysList;\n\n  const daysSets = {};\n\n  uniqueDaysList.forEach(el => {\n    daysSets[el] = forecastList.filter(\n      item => moment.unix(item.dt).format('D') === el\n    );\n  });\n\n  const objectifiedData = {};\n  const hourDataSequences = {};\n\n  for (let key in daysSets) {\n    if (daysSets.hasOwnProperty(key)) {\n      const objectifiedDaySet = {};\n      const hourDataSequence = [];\n      daysSets[key].map(el => {\n        objectifiedDaySet[el.dt] = el;\n        hourDataSequence.push(el.dt);\n      });\n      objectifiedData[key] = objectifiedDaySet;\n      hourDataSequences[key] = hourDataSequence;\n    }\n  }\n\n  const findMin = (data, selector) => {\n    // TODO: move to helpers\n    let arrData = []; // TODO: IMPORTANT: REFACTOR!!!\n\n    for (let key in data) {\n      // TODO: IMPORTANT: REFACTOR!!!\n      if (data.hasOwnProperty(key)) {\n        arrData.push(data[key]);\n      }\n    }\n\n    return Math.min.apply(\n      Math,\n      arrData.map(item => {\n        return get(item, selector, '');\n      })\n    );\n  };\n\n  const findMax = (data, selector) => {\n    // TODO: move to helpers\n\n    let arrData = []; // TODO: IMPORTANT: REFACTOR!!!\n\n    for (let key in data) {\n      // TODO: IMPORTANT: REFACTOR!!!\n      if (data.hasOwnProperty(key)) {\n        arrData.push(data[key]);\n      }\n    }\n\n    return Math.max.apply(\n      Math,\n      arrData.map(item => {\n        return get(item, selector, '');\n      })\n    );\n  };\n\n  const findMostly = (data, selector) => {\n    // TODO: move to helpers\n\n    let arrData = []; // TODO: IMPORTANT: REFACTOR!!!\n\n    for (let key in data) {\n      // TODO: IMPORTANT: REFACTOR!!!\n      if (data.hasOwnProperty(key)) {\n        arrData.push(data[key]);\n      }\n    }\n\n    const extractedItemsArr = arrData.map(item => {\n      return get(item, selector, '');\n    });\n\n    const mostFrequent = _.head(\n      _(extractedItemsArr)\n        .countBy()\n        .entries()\n        .maxBy(_.last)\n    );\n\n    return mostFrequent;\n  };\n\n  const averagedData = {};\n\n  for (var key in objectifiedData) {\n    if (objectifiedData.hasOwnProperty(key)) {\n      averagedData[key] = {\n        minTemp: findMin(objectifiedData[key], 'main.temp'),\n        maxTemp: findMax(objectifiedData[key], 'main.temp'),\n\n        minPressure: findMin(objectifiedData[key], 'main.pressure'),\n        maxPressure: findMax(objectifiedData[key], 'main.pressure'),\n\n        minHumidity: findMin(objectifiedData[key], 'main.humidity'),\n        maxHumidity: findMax(objectifiedData[key], 'main.humidity'),\n\n        mostlyWeatherDescription: findMostly(\n          objectifiedData[key],\n          'weather[0].description'\n        ),\n        mostlyWeatherIcon: findMostly(objectifiedData[key], 'weather[0].icon'),\n\n        minClouds: findMin(objectifiedData[key], 'main.clouds'),\n        maxClouds: findMax(objectifiedData[key], 'main.clouds'),\n\n        minSpeed: findMin(objectifiedData[key], 'wind.speed'),\n        maxSpeed: findMax(objectifiedData[key], 'wind.speed'),\n      };\n    }\n  }\n\n  yield put(\n    actions.getForecastedWeather.success({\n      data: objectifiedData,\n      averagedData: averagedData,\n      dayDataSequence,\n      hourDataSequences,\n    })\n  );\n}\n\nexport function* forecastSagas() {\n  yield all([\n    yield takeEvery(actions.setSelectedLocation, getCurrentWeather), // TODO: refactor\n    yield takeEvery(actions.setSelectedLocation, getForecastedWeather), // TODO: refactor\n  ]);\n}\n","import { forecastSagas } from './forecast/sagas';\nimport { fork } from 'redux-saga/effects';\n\nexport default function* rootSaga() {\n  yield fork(forecastSagas);\n}\n","import createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware, compose, createStore } from 'redux';\n\nimport { handleNotification } from 'helpers/utils';\n\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware({\n  onError: error => {\n    handleNotification('Error!');\n    console.log(error);\n  },\n});\n\nexport const store = createStore(\n  rootReducer,\n  {},\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","export const ROUTES = {\n  REDIRECT_URL: 'select-location',\n  SELECT_LOCATION: 'select-location',\n  FORECAST: 'forecast',\n}","import React from 'react';\n\nimport styles from './PageErrorBoundary.module.scss';\n\nclass PageErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, errorMessage: '' };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, errorMessage: JSON.stringify(error) };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <h2 className={styles.heading}>Error!</h2>\n          <div className={styles.errorMessage}>\n            Message: {this.state.errorMessage}\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default PageErrorBoundary;\n","import React from 'react';\nimport styles from './Header.module.scss';\nimport { ROUTES } from 'constants/routes';\nimport history from 'componentsCommon/history';\n\nfunction Header() {\n  const onGoToRoot = () => {\n    history.push(`/${ROUTES.SELECT_LOCATION}`);\n  };\n\n  return (\n    <header className={styles.rootWrapper}>\n      <div className={styles.logo} onClick={onGoToRoot}>\n        <div className={`${styles.half} ${styles.left}`}>Weather</div>\n        <div className={`${styles.half} ${styles.right}`}>\n          <span>app</span>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nimport styles from './Footer.module.scss';\n\nfunction Footer() {\n  return (\n    <footer className={styles.rootWrapper}>\n      <div className={styles.rights}>\n        <div>\n          Icons made by{' '}\n          <a href='https://www.flaticon.com/authors/freepik' title='Freepik'>\n            Freepik\n          </a>{' '}\n          from{' '}\n          <a href='https://www.flaticon.com/' title='Flaticon'>\n            www.flaticon.com\n          </a>\n        </div>\n        <div>\n          Icons made by{' '}\n          <a\n            href='https://www.flaticon.com/authors/swifticons'\n            title='Swifticons'\n          >\n            Swifticons\n          </a>{' '}\n          from {/* // TODO */}\n          <a href='https://www.flaticon.com/' title='Flaticon'>\n            www.flaticon.com\n          </a>\n        </div>\n        <div>\n          Image by{' '}\n          <a href='https://pixabay.com/users/PublicDomainPictures-14/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=316579'>\n            PublicDomainPictures\n          </a>{' '}\n          from{' '}\n          <a href='https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=316579'>\n            Pixabay\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport { PageErrorBoundary } from 'componentsCommon/PageErrorBoundary';\nimport { Header } from 'componentsCommon/Header';\nimport { Footer } from 'componentsCommon/Footer';\n\nimport styles from './CommonLayout.module.scss';\n\nfunction CommonLayout({ children }) {\n  return (\n    <div className={styles.page}>\n      <div className={styles.container}>\n        <Header />\n      </div>\n      <main className={styles.mainContentWrapper}>\n        <div className={styles.container}>\n          <PageErrorBoundary>{children}</PageErrorBoundary>\n        </div>\n      </main>\n      <div className={styles.container}>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default CommonLayout;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { get } from 'lodash';\n\nimport { ROUTES } from 'constants/routes';\nimport history from 'componentsCommon/history';\n\nimport styles from './LocationInfo.module.scss';\n\nfunction LocationInfo() {\n  const selectedLocation = useSelector(\n    state => state.forecast.selectedLocation\n  );\n\n  const cityNameFromCurrent = useSelector(state =>\n    get(state, 'forecast.currentWeather.data.name', '')\n  );\n  const cityNameFromForecasted = useSelector(state =>\n    get(state, 'forecast.forecastedWeather.data.city.name', '')\n  );\n\n  const countryCodeFromCurrent = useSelector(state =>\n    get(state, 'forecast.currentWeather.data.sys.country', '')\n  );\n  const countryCodeFromForecasted = useSelector(state =>\n    get(state, 'forecast.forecastedWeather.data.city.country', '')\n  );\n\n  const onChangeLocation = () => {\n    history.push(`/${ROUTES.SELECT_LOCATION}`);\n  };\n\n  return (\n    <div className={styles.rootWrapper}>\n      <div className={styles.topWrapper}>\n        <h5>Your location:</h5>\n        <div>Lat: {selectedLocation.lat}</div>\n        <div>Lon: {selectedLocation.lat}</div>\n        {cityNameFromCurrent || cityNameFromForecasted ? (\n          <div>City: {cityNameFromCurrent || cityNameFromForecasted}</div>\n        ) : null}\n        {countryCodeFromCurrent || countryCodeFromForecasted ? (\n          <div>\n            Country: {countryCodeFromCurrent || countryCodeFromForecasted}\n          </div>\n        ) : null}\n      </div>\n\n      <button onClick={onChangeLocation} className={styles.backButton}>\n        Change location\n      </button>\n    </div>\n  );\n}\n\nexport default LocationInfo;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { get } from 'lodash';\n\nimport cloudLogo from 'assets/icons/cloud-1.svg';\nimport atmPressureLogo from 'assets/icons/pressure-1.svg';\nimport humidityLogo from 'assets/icons/humidity.svg';\nimport cloudinessLogo from 'assets/icons/cloud-2.svg';\nimport windSpeedLogo from 'assets/icons/wind.svg';\nimport windDirectionLogo from 'assets/icons/wind-direction.svg';\nimport rainVolumeLogo from 'assets/icons/drop.svg';\nimport snowVolumeLogo from 'assets/icons/snowflake.svg';\nimport calculationTimeLogo from 'assets/icons/time-left.svg';\nimport sunriseLogo from 'assets/icons/sunrise.svg';\nimport sunsetLogo from 'assets/icons/sunset.svg';\n\nimport styles from './CurrentWeather.module.scss';\n\nfunction CurrentWeather() {\n  const currentWeather = useSelector(\n    state => state.forecast.currentWeather.data\n  );\n\n  const [detailsIsOpened, setDetailsIsOpened] = useState(false);\n\n  const weatherConditionDescription = get(\n    currentWeather,\n    'weather[0].description',\n    ''\n  );\n  const weatherConditionIconCode = get(currentWeather, 'weather[0].icon', '');\n\n  const mainTemp = get(currentWeather, 'main.temp', '');\n  const minTemp = get(currentWeather, 'main.temp_min', '');\n  const maxTemp = get(currentWeather, 'main.temp_max', '');\n\n  const atmPressureMain = get(currentWeather, 'main.pressure', '');\n  const atmPressureSea = get(currentWeather, 'main.sea_level', '');\n  const atmPressureGround = get(currentWeather, 'main.grnd_level', '');\n\n  const humidity = get(currentWeather, 'main.humidity', '');\n\n  const windSpeed = get(currentWeather, 'wind.speed', '');\n  const windDirection = get(currentWeather, 'wind.deg', '');\n\n  const cloudiness = get(currentWeather, 'clouds.all', '');\n\n  const rainVolume1 = get(currentWeather, 'rain.1h', '');\n  const rainVolume3 = get(currentWeather, 'rain.3h', '');\n\n  const snowVolume1 = get(currentWeather, 'snow.1h', '');\n  const snowVolume3 = get(currentWeather, 'snow.3h', '');\n\n  const calculationTime = get(currentWeather, 'dt', '');\n\n  const sunriseTime = get(currentWeather, 'sys.sunrise', '');\n  const sunsetTime = get(currentWeather, 'sys.sunset', '');\n\n  const additionalParamsData = [\n    {\n      logo: atmPressureLogo,\n      logoAltText: 'pressure main icon',\n      text: 'Atm. pressure, hPa:',\n      value: atmPressureMain,\n    },\n    {\n      logo: atmPressureLogo,\n      logoAltText: 'pressure sea level icon',\n      text: 'Atm. pressure (sea level), hPa:',\n      value: atmPressureSea,\n    },\n    {\n      logo: atmPressureLogo,\n      logoAltText: 'pressure ground level icon',\n      text: 'Atm. pressure (ground level), hPa:',\n      value: atmPressureGround,\n    },\n    {\n      logo: humidityLogo,\n      logoAltText: 'humidity icon',\n      text: 'Humidity, %:',\n      value: humidity,\n    },\n    {\n      logo: cloudinessLogo,\n      logoAltText: 'cloudiness icon',\n      text: 'Cloudiness, %:',\n      value: cloudiness,\n    },\n    {\n      logo: windSpeedLogo,\n      logoAltText: 'wind speed icon',\n      text: 'Wind speed, m/s:',\n      value: windSpeed,\n    },\n    {\n      logo: windDirectionLogo,\n      logoAltText: 'wind direction icon',\n      text: 'Wind direction, degrees:',\n      value: windDirection,\n    },\n    {\n      logo: rainVolumeLogo,\n      logoAltText: 'rain volume 1h icon',\n      text: 'Rain volume 1h, mm:',\n      value: rainVolume1,\n    },\n    {\n      logo: rainVolumeLogo,\n      logoAltText: 'rain volume 3h icon',\n      text: 'Rain volume 3h :',\n      value: rainVolume3,\n    },\n    {\n      logo: snowVolumeLogo,\n      logoAltText: 'snow volume 1h icon',\n      text: 'Snow volume 1h:',\n      value: snowVolume1,\n    },\n    {\n      logo: snowVolumeLogo,\n      logoAltText: 'snow volume 3h icon',\n      text: 'Snow volume 3h:',\n      value: snowVolume3,\n    },\n    {\n      logo: calculationTimeLogo,\n      logoAltText: 'time of calculation icon',\n      text: 'Time of calculation:',\n      value: calculationTime,\n    },\n    {\n      logo: sunriseLogo,\n      logoAltText: 'sunrise icon',\n      text: 'Sunrise time:',\n      value: sunriseTime,\n    },\n    {\n      logo: sunsetLogo,\n      logoAltText: 'sunset icon',\n      text: 'Sunset time:',\n      value: sunsetTime,\n    },\n  ];\n\n  const renderAdditionalParamsList = dataList => {\n    return (\n      <ul\n        className={classNames(styles.otherParamsList, {\n          [styles.otherParamsListOpened]: detailsIsOpened,\n        })}\n      >\n        {dataList.map((el, index) =>\n          el.value ? (\n            <li className={styles.otherParamsItem} key={index}>\n              <img\n                className={styles.infoLogo}\n                src={el.logo}\n                alt={el.logoAltText}\n              />\n              <span className={styles.infoText}>\n                {el.text}\n                {'  '}\n                {el.value}\n              </span>\n            </li>\n          ) : null\n        )}\n      </ul>\n    );\n  };\n\n  const onDetailsOpenClose = () => {\n    detailsIsOpened === false\n      ? setDetailsIsOpened(true)\n      : setDetailsIsOpened(false);\n  };\n\n  return (\n    <div className={styles.rootWrapper}>\n      <h5 className={styles.pageHeading}>Weather today: </h5>\n\n      <div className={styles.tempWeatherWrapper}>\n        <div className={styles.temperatureSection}>\n          {maxTemp ? (\n            <div className={styles.temperatureMinMax}>Min: {maxTemp}, C</div>\n          ) : null}\n          {mainTemp ? (\n            <div className={styles.temperatureMain}>{mainTemp}, C</div>\n          ) : null}\n          {minTemp ? (\n            <div className={styles.temperatureMinMax}>Max: {minTemp}, C</div>\n          ) : null}\n        </div>\n\n        <div className={styles.weatherConditionSection}>\n          <div className={styles.weatherConditionIconWrapper}>\n            {weatherConditionIconCode ? (\n              <img\n                src={`http://openweathermap.org/img/wn/${weatherConditionIconCode}@2x.png`}\n                alt='weather condition icon'\n              />\n            ) : (\n              <img src={cloudLogo} alt='weather condition icon' />\n            )}\n          </div>\n          <div className={styles.weatherConditionDescription}>\n            {weatherConditionDescription}\n          </div>\n        </div>\n      </div>\n\n      <button\n        onClick={onDetailsOpenClose}\n        type='button'\n        className={classNames(styles.showMoreButton, {\n          [styles.showMoreButtonOpenedState]: detailsIsOpened,\n        })}\n      >\n        {detailsIsOpened ? 'Show less' : 'Show more'}\n      </button>\n\n      {renderAdditionalParamsList(additionalParamsData)}\n    </div>\n  );\n}\n\nexport default CurrentWeather;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport { get } from 'lodash';\n\nimport * as forecastActions from 'store/forecast/actions';\n\nimport cloudLogo from 'assets/icons/cloud-1.svg';\n\nimport styles from './DayCard.module.scss';\n\nfunction DayCard({ cardId }) {\n  const dispatch = useDispatch();\n\n  const averagedData = useSelector(\n    state => state.forecast.forecastedWeather.averagedData[cardId]\n  );\n\n  const selectedDayId = useSelector(\n    state => state.forecast.forecastedWeather.selectedDayId\n  );\n\n  useEffect(() => {\n    selectedDayId === cardId ? setIsActive(true) : setIsActive(false);\n  }, [selectedDayId]);\n\n  const dayData = useSelector(state =>\n    get(state, `forecast.forecastedWeather.data[${cardId}]`, '')\n  );\n\n  const [isActive, setIsActive] = useState(false);\n\n  const formattedDayDate = moment\n    .unix(dayData[Object.keys(dayData)[0]].dt)\n    .format('MMM Do YYYY');\n\n  const minTemp = get(averagedData, 'minTemp', '');\n  const maxTemp = get(averagedData, 'maxTemp', '');\n\n  const mostlyWeatherDescription = get(\n    averagedData,\n    'mostlyWeatherDescription',\n    ''\n  );\n  const mostlyWeatherIcon = get(averagedData, 'mostlyWeatherIcon', '');\n\n  const onShowCardDetails = () => {\n    dispatch(\n      forecastActions.showDayForecastDetails({\n        dayId: cardId,\n      })\n    );\n  };\n\n  return (\n    <div\n      className={classNames(styles.rootWrapper, {\n        [styles.rootWrapperActive]: isActive,\n      })}\n    >\n      <h5 className={styles.currentDate}>{formattedDayDate}</h5>\n\n      <div className={styles.weatherConditionSection}>\n        <div className={styles.weatherConditionIconWrapper}>\n          {mostlyWeatherIcon ? (\n            <img\n              src={`http://openweathermap.org/img/wn/${mostlyWeatherIcon}@2x.png`}\n              alt='weather condition icon'\n            />\n          ) : (\n            <img src={cloudLogo} alt='weather condition icon' /> // TODO: style default icon\n          )}\n        </div>\n        <div className={styles.weatherConditionDescription}>\n          Mostly {mostlyWeatherDescription}\n        </div>\n      </div>\n\n      <div className={styles.temperatureSection}>\n        <div className={styles.temperatureRow}>\n          <div className={styles.temperatureHalfSection}>\n            <div className={styles.temperaturePrefix}>from </div>\n          </div>\n          <div className={styles.temperatureHalfSection}>\n            <div className={styles.temperatureValue}>{minTemp}</div>\n            <div className={styles.temperaturePostfix}>, C</div>\n          </div>\n        </div>\n\n        <div className={styles.temperatureRow}>\n          <div className={styles.temperatureHalfSection}>\n            <div className={styles.temperaturePrefix}>to </div>\n          </div>\n          <div className={styles.temperatureHalfSection}>\n            <div className={styles.temperatureValue}>{maxTemp}</div>\n            <div className={styles.temperaturePostfix}>, C</div>\n          </div>\n        </div>\n      </div>\n\n      <button onClick={onShowCardDetails} className={styles.showMoreButton}>\n        Show more\n      </button>\n    </div>\n  );\n}\n\nexport default DayCard;\n","import { DayCard } from 'components/DayCard';\nimport React, { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport styles from './ForecastedWeather.module.scss';\n\nfunction ForecastedWeather() {\n  const dayDataSequence = useSelector(\n    state => state.forecast.forecastedWeather.dayDataSequence\n  );\n\n  return (\n    <Fragment>\n      <div className={styles.rootWrapper}>\n        <h5>Forecast</h5>\n        <div className={styles.cardListWrapper}>\n          {dayDataSequence.map(key => {\n            return (\n              <div key={key} className={styles.dayCardWrapper}>\n                <DayCard cardId={key} />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default ForecastedWeather;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { get } from 'lodash';\n\nimport * as forecastActions from 'store/forecast/actions';\n\nimport cloudLogo from 'assets/icons/cloud-1.svg';\n\nimport styles from './ThreeHourCard.module.scss';\n\nfunction ThreeHourCard({ cardId }) {\n  const dispatch = useDispatch();\n\n  const selectedDayId = useSelector(\n    state => state.forecast.forecastedWeather.selectedDayId\n  );\n\n  const selectedHourId = useSelector(\n    state => state.forecast.forecastedWeather.selectedHourId\n  );\n\n  const thisHourData = useSelector(state =>\n    get(\n      state,\n      `forecast.forecastedWeather.data[${selectedDayId}][${cardId}]`,\n      {}\n    )\n  );\n\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    selectedHourId === cardId ? setIsActive(true) : setIsActive(false);\n  }, [selectedHourId]);\n\n  const forecastTime = moment\n    .unix(get(thisHourData, 'dt', ''))\n    .format('MMM Do YYYY, hh:mm'); // TODO: set default date\n  const mainTemp = get(thisHourData, 'main.temp', '');\n  const minTemp = get(thisHourData, 'main.temp_min', '');\n  const maxTemp = get(thisHourData, 'main.temp_max', '');\n  const weatherConditionDescription = get(\n    thisHourData,\n    'weather[0].description',\n    ''\n  );\n  const weatherConditionIconCode = get(thisHourData, 'weather[0].icon', '');\n\n  const onShowMore = () => {\n    dispatch(\n      forecastActions.showHourForecastDetails({\n        hourId: cardId,\n      })\n    );\n  };\n\n  return (\n    <div\n      className={classNames(styles.rootWrapper, {\n        [styles.rootWrapperOpened]: isActive,\n      })}\n    >\n      <div>{forecastTime}</div>\n\n      <div className={styles.tempWeatherWrapper}>\n        <div className={styles.temperatureSection}>\n          <div className={styles.temperatureMinMax}>Min: {maxTemp}, C</div>\n          <div className={styles.temperatureMain}>{mainTemp}, C</div>\n          <div className={styles.temperatureMinMax}>Max: {minTemp}, C</div>\n        </div>\n\n        <div className={styles.weatherConditionSection}>\n          <div className={styles.weatherConditionIconWrapper}>\n            {weatherConditionIconCode ? (\n              <img\n                src={`http://openweathermap.org/img/wn/${weatherConditionIconCode}@2x.png`}\n                alt='weather condition icon'\n              />\n            ) : (\n              <img src={cloudLogo} alt='weather condition icon' />\n            )}\n          </div>\n          <div className={styles.weatherConditionDescription}>\n            {weatherConditionDescription}\n          </div>\n        </div>\n      </div>\n\n      <button onClick={onShowMore} className={styles.showMoreButton}>\n        Show more\n      </button>\n    </div>\n  );\n}\n\nexport default ThreeHourCard;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get } from 'lodash';\nimport moment from 'moment';\n\nimport * as forecastActions from 'store/forecast/actions';\n\nimport atmPressureLogo from 'assets/icons/pressure-1.svg';\nimport humidityLogo from 'assets/icons/humidity.svg';\nimport cloudinessLogo from 'assets/icons/cloud-2.svg';\nimport windSpeedLogo from 'assets/icons/wind.svg';\nimport temperatureLogo from 'assets/icons/thermometer.svg';\n\nimport { ThreeHourCard } from 'components/ThreeHourCard';\n\nimport styles from './DayForecastDetails.module.scss';\n\nfunction DayForecastDetails() {\n  const dispatch = useDispatch();\n\n  const selectedDayId = useSelector(\n    state => state.forecast.forecastedWeather.selectedDayId\n  );\n\n  const averagedData = useSelector(\n    state => state.forecast.forecastedWeather.averagedData[selectedDayId]\n  );\n\n  const dayData = useSelector(state =>\n    get(state, `forecast.forecastedWeather.data[${selectedDayId}]`, '')\n  );\n\n  const hourDataSequences = useSelector(\n    state => state.forecast.forecastedWeather.hourDataSequences\n  );\n\n  const thisDayDataSequence = get(hourDataSequences, `[${selectedDayId}]`, []);\n\n  const formattedDayDate = moment\n    .unix(dayData[Object.keys(dayData)[0]].dt)\n    .format('MMM Do YYYY');\n\n  const minTemp = get(averagedData, 'minTemp', '');\n  const maxTemp = get(averagedData, 'maxTemp', '');\n\n  const minPressure = get(averagedData, 'minPressure', '');\n  const maxPressure = get(averagedData, 'maxPressure', '');\n\n  const minHumidity = get(averagedData, 'minHumidity', '');\n  const maxHumidity = get(averagedData, 'maxHumidity', '');\n\n  const minClouds = get(averagedData, 'minClouds', '');\n  const maxClouds = get(averagedData, 'maxClouds', '');\n\n  const minSpeed = get(averagedData, 'minSpeed', '');\n  const maxSpeed = get(averagedData, 'maxSpeed', '');\n\n  const onHideCardDetails = () => {\n    dispatch(forecastActions.hideDayForecastDetails());\n  };\n\n  const paramsData = [\n    {\n      logo: temperatureLogo,\n      logoAltText: 'average temperature icon',\n      infoNode: (\n        <span>\n          Temperature: from <b>{minTemp}</b>, C to <b>{maxTemp}</b>, C\n        </span>\n      ),\n    },\n    {\n      logo: atmPressureLogo,\n      logoAltText: 'average atm pressure icon',\n      infoNode: (\n        <span>\n          Atm. pressure: from <b>{minPressure}</b>, hPa to <b>{maxPressure}</b>,\n          hPa\n        </span>\n      ),\n    },\n    {\n      logo: humidityLogo,\n      logoAltText: 'average humidity icon',\n      infoNode: (\n        <span>\n          Humidity: from <b>{minHumidity}</b>, % to <b>{maxHumidity}</b>, %\n        </span>\n      ),\n    },\n    {\n      logo: cloudinessLogo,\n      logoAltText: 'average cloudiness icon',\n      infoNode: (\n        <span>\n          Cloudiness: from <b>{minClouds}</b>, % to <b>{maxClouds}</b>, %\n        </span>\n      ),\n    },\n    {\n      logo: windSpeedLogo,\n      logoAltText: 'average wind speed icon',\n      infoNode: (\n        <span>\n          Wind speed: from <b>{minSpeed}</b>, m/s to <b>{maxSpeed}</b>, m/s\n        </span>\n      ),\n    },\n  ];\n\n  const renderParamsList = dataList => {\n    return (\n      <ul className={styles.paramsList}>\n        {dataList.map((el, index) => (\n          <li className={styles.paramsItem} key={index}>\n            <img\n              className={styles.infoLogo}\n              src={el.logo}\n              alt={el.logoAltText}\n            />\n            {el.infoNode}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div className={styles.rootWrapper}>\n      <h5 className={styles.heading}>{formattedDayDate}</h5>\n      {renderParamsList(paramsData)}\n\n      <div className={styles.cardListWrapper}>\n        {thisDayDataSequence.map(el => {\n          return (\n            <div className={styles.threeHourCardWrapper} key={el}>\n              <ThreeHourCard cardId={el} />\n            </div>\n          );\n        })}\n      </div>\n\n      <button onClick={onHideCardDetails} className={styles.closeButton}>\n        Close\n      </button>\n    </div>\n  );\n}\n\nexport default DayForecastDetails;\n","import React, { useState, useEffect } from 'react';\n\nimport './styles.css';\n\nfunction AnimatedContainer({ show, children }) {\n  const [render, setRender] = useState(show);\n\n  useEffect(() => {\n    if (show) setRender(true);\n  }, [show]);\n\n  const onAnimationEnd = () => {\n    if (!show) setRender(false);\n  };\n\n  return (\n    render && (\n      <div\n        style={{ animation: `${show ? 'fadeIn' : 'fadeOut'} 1s` }}\n        onAnimationEnd={onAnimationEnd}\n      >\n        {children}\n      </div>\n    )\n  );\n}\n\nexport default AnimatedContainer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get } from 'lodash';\nimport moment from 'moment';\n\nimport * as forecastActions from 'store/forecast/actions';\n\nimport temperatureLogo from 'assets/icons/thermometer.svg';\nimport atmPressureLogo from 'assets/icons/pressure-1.svg';\nimport humidityLogo from 'assets/icons/humidity.svg';\nimport cloudinessLogo from 'assets/icons/cloud-2.svg';\nimport windSpeedLogo from 'assets/icons/wind.svg';\nimport windDirectionLogo from 'assets/icons/wind-direction.svg';\nimport rainVolumeLogo from 'assets/icons/drop.svg';\nimport snowVolumeLogo from 'assets/icons/snowflake.svg';\nimport calculationTimeLogo from 'assets/icons/time-left.svg';\nimport cloudLogo from 'assets/icons/cloud-1.svg';\n\nimport styles from './HourForecastDetails.module.scss';\n\nfunction HourForecastDetails() {\n  const dispatch = useDispatch();\n\n  const selectedDayId = useSelector(\n    state => state.forecast.forecastedWeather.selectedDayId\n  );\n\n  const selectedHourId = useSelector(\n    state => state.forecast.forecastedWeather.selectedHourId\n  );\n\n  const thisHourData = useSelector(state =>\n    get(\n      state,\n      `forecast.forecastedWeather.data[${selectedDayId}][${selectedHourId}]`,\n      {}\n    )\n  );\n\n  const forecastTime = moment\n    .unix(get(thisHourData, 'dt', ''))\n    .format('MMM Do YYYY, hh:mm'); // TODO: set default date\n\n  const weatherConditionIconCode = get(thisHourData, 'weather[0].icon', '');\n  const weatherConditionDescription = get(\n    thisHourData,\n    'weather[0].description',\n    ''\n  );\n\n  const minTemp = get(thisHourData, 'main.temp_min', '');\n  const mainTemp = get(thisHourData, 'main.temp', '');\n  const maxTemp = get(thisHourData, 'main.temp_max', '');\n  const atmPressureMain = get(thisHourData, 'main.pressure', '');\n  const atmPressureSea = get(thisHourData, 'main.sea_level', '');\n  const atmPressureGround = get(thisHourData, 'main.grnd_level', '');\n  const humidity = get(thisHourData, 'main.humidity', '');\n  const cloudiness = get(thisHourData, 'clouds.all', '');\n  const windSpeed = get(thisHourData, 'wind.speed', '');\n  const windDirection = get(thisHourData, 'wind.deg', '');\n  const rainVolume = get(thisHourData, 'rain.3h', '');\n  const snowVolume = get(thisHourData, 'snow.3h', '');\n  const calculationTime = get(thisHourData, 'dt_txt', '');\n\n  const onHideCardDetails = () => {\n    dispatch(forecastActions.hideHourForecastDetails());\n  };\n\n  const renderParamsList = dataList => {\n    return (\n      <ul className={styles.paramsList}>\n        {dataList.map((el, index) =>\n          el.value ? (\n            <li className={styles.paramsItem} key={index}>\n              <img\n                className={styles.infoLogo}\n                src={el.logo}\n                alt={el.logoAltText}\n              />\n              <span className={styles.infoText}>\n                {el.text}\n                {'  '}\n                {el.value}\n              </span>\n            </li>\n          ) : null\n        )}\n      </ul>\n    );\n  };\n\n  const paramsData = [\n    {\n      logo: temperatureLogo,\n      logoAltText: 'min temperature icon',\n      text: 'Minimum temperature, C:',\n      value: minTemp,\n    },\n    {\n      logo: temperatureLogo,\n      logoAltText: 'main temperature icon',\n      text: 'Temperature, C:',\n      value: mainTemp,\n    },\n    {\n      logo: temperatureLogo,\n      logoAltText: 'max temperature icon',\n      text: 'Maximum temperature, C:',\n      value: maxTemp,\n    },\n    {\n      logo: atmPressureLogo,\n      logoAltText: 'atmospheric pressure icon',\n      text: 'Atmospheric pressure, hPa:',\n      value: atmPressureMain,\n    },\n    {\n      logo: atmPressureLogo,\n      logoAltText: 'atmospheric pressure sea level icon',\n      text: 'Atmospheric pressure on the sea level, hPa:',\n      value: atmPressureSea,\n    },\n    {\n      logo: atmPressureLogo,\n      logoAltText: 'atmospheric pressure ground level icon',\n      text: 'Atmospheric pressure on the ground level, hPa:',\n      value: atmPressureGround,\n    },\n    {\n      logo: humidityLogo,\n      logoAltText: 'humidity icon',\n      text: 'Humidity, %:',\n      value: humidity,\n    },\n    {\n      logo: cloudinessLogo,\n      logoAltText: 'cloudiness icon',\n      text: 'Cloudiness, %:',\n      value: cloudiness,\n    },\n    {\n      logo: windSpeedLogo,\n      logoAltText: 'wind speed icon',\n      text: 'Wind speed, meter/sec :',\n      value: windSpeed,\n    },\n    {\n      logo: windDirectionLogo,\n      logoAltText: 'wind direction icon',\n      text: 'Wind direction, degrees:',\n      value: windDirection,\n    },\n    {\n      logo: rainVolumeLogo,\n      logoAltText: 'rain volume 3h icon',\n      text: 'Rain volume for last 3 hours, mm:',\n      value: rainVolume,\n    },\n    {\n      logo: snowVolumeLogo,\n      logoAltText: 'snow volume 3h icon',\n      text: 'Snow volume for last 3 hours, mm:',\n      value: snowVolume,\n    },\n    {\n      logo: calculationTimeLogo,\n      logoAltText: 'time of calculation icon',\n      text: 'Time of calculation:',\n      value: calculationTime,\n    },\n  ];\n\n  return (\n    <div className={styles.rootWrapper}>\n      <h5 className={styles.heading}>{forecastTime}</h5>\n\n      <div className={styles.weatherConditionSection}>\n        <div className={styles.weatherConditionIconWrapper}>\n          {weatherConditionIconCode ? (\n            <img\n              src={`http://openweathermap.org/img/wn/${weatherConditionIconCode}@2x.png`}\n              alt='weather condition icon'\n            />\n          ) : (\n            <img src={cloudLogo} alt='weather condition icon' /> // TODO: style default icon\n          )}\n        </div>\n        <div className={styles.weatherConditionDescription}>\n          {weatherConditionDescription}\n        </div>\n      </div>\n\n      {renderParamsList(paramsData)}\n\n      <button onClick={onHideCardDetails} className={styles.closeButton}>\n        Close\n      </button>\n    </div>\n  );\n}\n\nexport default HourForecastDetails;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { ROUTES } from 'constants/routes';\nimport history from 'componentsCommon/history';\n\nimport { CommonLayout } from 'layouts/CommonLayout';\n\nimport { LocationInfo } from 'components/LocationInfo';\nimport { CurrentWeather } from 'components/CurrentWeather';\nimport { ForecastedWeather } from 'components/ForecastedWeather';\nimport { DayForecastDetails } from 'components/DayForecastDetails';\nimport { AnimatedContainer } from 'componentsCommon/AnimatedContainer';\nimport { HourForecastDetails } from 'components/HourForecastDetails';\n\nimport styles from './ForecastPage.module.scss';\n\nfunction ForecastPage() {\n  const dayDetailsOpened = useSelector(\n    state => state.forecast.forecastedWeather.dayDetailsSectionIsOpened\n  );\n\n  const hourDetailsOpened = useSelector(\n    state => state.forecast.forecastedWeather.hourDetailsSectionIsOpened\n  );\n\n  const dataIsLoaded = useSelector(state => state.forecast.dataIsLoaded);\n\n  const currentWeatherLoading = useSelector(\n    state => state.forecast.currentWeather.loading\n  );\n\n  const forecastedWeather = useSelector(\n    state => state.forecast.forecastedWeather.loading\n  );\n\n  useEffect(() => {\n    if (!dataIsLoaded && !currentWeatherLoading && !forecastedWeather)\n      history.push(`/${ROUTES.REDIRECT_URL}`);\n  }, []);\n\n  return (\n    <CommonLayout>\n      <div className={styles.rootWrapper}>\n        <section className={styles.locationCurrentWeatherSection}>\n          <div className={styles.locationInfoWrapper}>\n            <LocationInfo />\n          </div>\n          <div className={styles.currentWeatherWrapper}>\n            <CurrentWeather />\n          </div>\n        </section>\n        <section className={styles.forecastedWeatherSection}>\n          <ForecastedWeather />\n        </section>\n        <AnimatedContainer show={dayDetailsOpened}>\n          <section className={styles.dayDetailsSection}>\n            <DayForecastDetails />\n          </section>\n        </AnimatedContainer>\n        <AnimatedContainer show={hourDetailsOpened}>\n          <section className={styles.hourDetailsSection}>\n            <HourForecastDetails />\n          </section>\n        </AnimatedContainer>\n      </div>\n    </CommonLayout>\n  );\n}\n\nexport default ForecastPage;\n","import React, { useState } from 'react';\nimport { get } from 'lodash';\nimport { useDispatch } from 'react-redux';\n\nimport * as forecastActions from 'store/forecast/actions';\nimport { ROUTES } from 'constants/routes';\nimport history from 'componentsCommon/history';\n\nimport AlgoliaPlaces from 'algolia-places-react';\n\nimport styles from './PlaceSelectionForm.module.scss';\n\nfunction PlaceSelectionForm() {\n  const dispatch = useDispatch();\n\n  const [location, setLocation] = useState({\n    lat: 0,\n    lon: 0,\n  });\n\n  const onSubmit = () => {\n    dispatch(\n      forecastActions.setSelectedLocation({\n        lat: location.lat,\n        lon: location.lon,\n      })\n    );\n\n    history.push(`/${ROUTES.FORECAST}`);\n  };\n\n  return (\n    <div className={styles.rootWrapper}>\n      <div className={styles.autocompleteWrapper}>\n        <AlgoliaPlaces\n          placeholder='Write an address here'\n          options={{\n            language: 'en',\n            countries: [],\n            type: 'city',\n          }}\n          onChange={({ query, rawAnswer, suggestion, suggestionIndex }) => {\n            setLocation({\n              lat: get(suggestion, 'latlng.lat', 0),\n              lon: get(suggestion, 'latlng.lng', 0),\n            });\n          }}\n        />\n      </div>\n      <button\n        type='button'\n        name='Submit'\n        onClick={onSubmit}\n        className={styles.submitButton}\n      >\n        Submit\n      </button>\n    </div>\n  );\n}\n\nexport default PlaceSelectionForm;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ROUTES } from 'constants/routes';\nimport * as forecastActions from 'store/forecast/actions';\nimport history from 'componentsCommon/history';\n\nimport { handleNotification } from 'helpers/utils';\n\nimport styles from './CoordinateSelectionForm.module.scss';\n\nfunction CoordinateSelectionForm() {\n  const dispatch = useDispatch();\n\n  const [location, setLocation] = useState({\n    lat: 0,\n    lon: 0,\n  });\n\n  const onChange = e => {\n    setLocation({\n      ...location,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = () => {\n    if (\n      location.lat >= -90 &&\n      location.lat <= 90 &&\n      location.lon >= -180 &&\n      location.lon <= 180\n    ) {\n      dispatch(\n        forecastActions.setSelectedLocation({\n          lat: location.lat,\n          lon: location.lon,\n        })\n      );\n\n      history.push(`/${ROUTES.FORECAST}`);\n    } else {\n      handleNotification('Wrong location coordinates!', 'error');\n    }\n  };\n\n  return (\n    <div className={styles.rootWrapper}>\n      <form className={styles.form}>\n        <label htmlFor='lat'>Latitude: </label>\n        <input\n          type='number'\n          id='lat'\n          name='lat'\n          placeholder='lat'\n          min='-90'\n          max='90'\n          onChange={onChange}\n        />\n        <label htmlFor='lon'>Longitude: </label>\n        <input\n          type='number'\n          id='lon'\n          name='lon'\n          placeholder='lon'\n          min='-180'\n          max='180'\n          onChange={onChange}\n        />\n      </form>\n      <button type='button' onClick={onSubmit} className={styles.submitButton}>\n        Submit\n      </button>\n    </div>\n  );\n}\n\nexport default CoordinateSelectionForm;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { CommonLayout } from 'layouts/CommonLayout';\n\nimport { PlaceSelectionForm } from 'components/PlaceSelectionForm';\nimport { CoordinateSelectionForm } from 'components/CoordinateSelectionForm';\n\nimport styles from './LocationSelectionPage.module.scss';\n\nfunction LocationSelectionPage() {\n  const [activeLocationForm, setActiveLocationForm] = useState('place');\n\n  const onFormSelectorChange = e => {\n    setActiveLocationForm(e.target.value);\n  };\n\n  return (\n    <CommonLayout>\n      <div className={styles.rootWrapper}>\n        <h2 className={styles.pageHeading}>Select your location</h2>\n\n        <div\n          className={classNames(styles.formsWrapper, {\n            [styles.formsWrapperAutocompleteActive]:\n              activeLocationForm === 'place',\n            [styles.formsWrappercoordinateSelectionActive]:\n              activeLocationForm === 'coordinates',\n          })}\n        >\n          <div\n            className={classNames(styles.autocompleteWrapper, {\n              [styles.autocompleteWrapperActive]:\n                activeLocationForm === 'place',\n            })}\n          >\n            <PlaceSelectionForm />\n          </div>\n          <div\n            className={classNames(styles.coordinateSelectionWrapper, {\n              [styles.coordinateSelectionWrapperActive]:\n                activeLocationForm === 'coordinates',\n            })}\n          >\n            <CoordinateSelectionForm />\n          </div>\n        </div>\n\n        <div className={styles.formSelectionWrapper}>\n          <label className={styles.container}>\n            By place\n            <input\n              type='radio'\n              checked={activeLocationForm === 'place'}\n              name='radio'\n              value={'place'}\n              onChange={onFormSelectorChange}\n            />\n            <span className={styles.checkmark}></span>\n          </label>\n          <label className={styles.container}>\n            By coordinates\n            <input\n              type='radio'\n              checked={activeLocationForm === 'coordinates'}\n              name='radio'\n              value={'coordinates'}\n              onChange={onFormSelectorChange}\n            />\n            <span className={styles.checkmark}></span>\n          </label>\n        </div>\n      </div>\n    </CommonLayout>\n  );\n}\n\nexport default LocationSelectionPage;\n","import React from 'react';\nimport { Router, Route, Redirect } from 'react-router-dom';\nimport { AnimatedSwitch, spring } from 'react-router-transition';\n\nimport history from 'componentsCommon/history';\nimport { ROUTES } from 'constants/routes';\n\nimport { ForecastPage } from 'pages/ForecastPage';\nimport { LocationSelectionPage } from 'pages/LocationSelectionPage';\n\nimport './animatedRoutes.css';\n\nfunction mapStyles(styles) {\n  return {\n    opacity: styles.opacity,\n    transform: `scale(${styles.scale})`,\n  };\n}\n\nfunction bounce(val) {\n  return spring(val, {\n    stiffness: 330,\n    damping: 22,\n  });\n}\n\nconst bounceTransition = {\n  atEnter: {\n    opacity: 0,\n    scale: 1.2,\n  },\n  atLeave: {\n    opacity: bounce(0),\n    scale: bounce(0.8),\n  },\n  atActive: {\n    opacity: bounce(1),\n    scale: bounce(1),\n  },\n};\n\nfunction RootRouter() {\n  return (\n    <Router history={history}>\n      <AnimatedSwitch\n        atEnter={bounceTransition.atEnter}\n        atLeave={bounceTransition.atLeave}\n        atActive={bounceTransition.atActive}\n        mapStyles={mapStyles}\n        className='route-animated-wrapper'\n      >\n        <Route\n          path={`/${ROUTES.SELECT_LOCATION}`}\n          exact\n          component={LocationSelectionPage}\n        />\n        <Route path={`/${ROUTES.FORECAST}`} exact component={ForecastPage} />\n        <Redirect from='*' to={`/${ROUTES.SELECT_LOCATION}`} />\n      </AnimatedSwitch>\n    </Router>\n  );\n}\n\nexport default RootRouter;\n","import React, { Fragment } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { RootRouter } from 'RootRouter';\n\nimport bgImage from 'assets/images/rain-316579_1280.jpg';\n\nimport 'stylesCommon/main.scss';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './TopLevelLayout.module.scss';\n\nfunction TopLevelLayout() {\n  return (\n    <Fragment>\n      <ToastContainer />\n      <RootRouter />\n      <div\n        className={styles.backgroundHolder} // should be here because animatedRoute\n        style={{\n          backgroundImage: `url(${bgImage})`,\n        }}\n      ></div>\n    </Fragment>\n  );\n}\n\nexport default TopLevelLayout;\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\n\nimport { TopLevelLayout } from 'layouts/TopLevelLayout';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Provider store={store}>\n        <TopLevelLayout />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"ThreeHourCard_clearfix__3OjTl\",\"showMoreButton\":\"ThreeHourCard_showMoreButton__31uT5\",\"rootWrapper\":\"ThreeHourCard_rootWrapper__293t-\",\"rootWrapperOpened\":\"ThreeHourCard_rootWrapperOpened__3RZ7L\",\"tempWeatherWrapper\":\"ThreeHourCard_tempWeatherWrapper__KI8g4\",\"temperatureSection\":\"ThreeHourCard_temperatureSection__jbLfo\",\"temperatureMinMax\":\"ThreeHourCard_temperatureMinMax__27BEA\",\"temperatureMain\":\"ThreeHourCard_temperatureMain__1W4er\",\"weatherConditionSection\":\"ThreeHourCard_weatherConditionSection__1TMUT\",\"weatherConditionIconWrapper\":\"ThreeHourCard_weatherConditionIconWrapper__3N7Xx\",\"weatherConditionDescription\":\"ThreeHourCard_weatherConditionDescription__WzPLs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"HourForecastDetails_clearfix__1AU2V\",\"closeButton\":\"HourForecastDetails_closeButton__3SEBb\",\"rootWrapper\":\"HourForecastDetails_rootWrapper__3K8M3\",\"heading\":\"HourForecastDetails_heading__2bUJc\",\"weatherConditionSection\":\"HourForecastDetails_weatherConditionSection__2F5HR\",\"weatherConditionIconWrapper\":\"HourForecastDetails_weatherConditionIconWrapper__1eWW-\",\"paramsList\":\"HourForecastDetails_paramsList__35BtJ\",\"paramsItem\":\"HourForecastDetails_paramsItem__2RsrU\",\"infoLogo\":\"HourForecastDetails_infoLogo__1deqr\",\"cardListWrapper\":\"HourForecastDetails_cardListWrapper__tkUCR\",\"threeHourCardWrapper\":\"HourForecastDetails_threeHourCardWrapper__2KdyP\"};","module.exports = __webpack_public_path__ + \"static/media/pressure-1.3a8063e8.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"DayForecastDetails_clearfix__3ZQU3\",\"closeButton\":\"DayForecastDetails_closeButton__3uFri\",\"rootWrapper\":\"DayForecastDetails_rootWrapper__2ojis\",\"heading\":\"DayForecastDetails_heading__MSwYv\",\"paramsList\":\"DayForecastDetails_paramsList__3v00S\",\"paramsItem\":\"DayForecastDetails_paramsItem__WdUmh\",\"infoLogo\":\"DayForecastDetails_infoLogo__1wvzq\",\"cardListWrapper\":\"DayForecastDetails_cardListWrapper__10mbY\",\"threeHourCardWrapper\":\"DayForecastDetails_threeHourCardWrapper__1nZ4f\"};","module.exports = __webpack_public_path__ + \"static/media/cloud-1.e8d21105.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"ForecastPage_clearfix__229uA\",\"rootWrapper\":\"ForecastPage_rootWrapper__2wKZJ\",\"locationCurrentWeatherSection\":\"ForecastPage_locationCurrentWeatherSection__3H1wA\",\"forecastedWeatherSection\":\"ForecastPage_forecastedWeatherSection__3o1QJ\",\"dayDetailsSection\":\"ForecastPage_dayDetailsSection__15QNf\",\"hourDetailsSection\":\"ForecastPage_hourDetailsSection__2euES\",\"locationInfoWrapper\":\"ForecastPage_locationInfoWrapper__zdQpK\",\"currentWeatherWrapper\":\"ForecastPage_currentWeatherWrapper__3BIVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"Header_clearfix__1tyqX\",\"rootWrapper\":\"Header_rootWrapper__1Ah9k\",\"logo\":\"Header_logo__2pJlx\",\"half\":\"Header_half__3Q32B\",\"left\":\"Header_left__1LBJP\",\"showup\":\"Header_showup__3Vfi4\",\"right\":\"Header_right__1O6us\",\"reveal\":\"Header_reveal__2CxGI\",\"slidein\":\"Header_slidein__2Xy2H\"};","module.exports = __webpack_public_path__ + \"static/media/humidity.526baf19.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-2.7cfe9c6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.6ef03e1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/thermometer.5ad1b52b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"CommonLayout_clearfix__KnlXT\",\"container\":\"CommonLayout_container__IzSU3\",\"page\":\"CommonLayout_page__1qXk7\",\"mainContentWrapper\":\"CommonLayout_mainContentWrapper__2vgmG\"};","module.exports = __webpack_public_path__ + \"static/media/drop.99ab4476.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowflake.27113c19.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind-direction.db763301.svg\";","module.exports = __webpack_public_path__ + \"static/media/time-left.bc9ac74a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"LocationInfo_clearfix__2rB2t\",\"rootWrapper\":\"LocationInfo_rootWrapper__1qGKd\",\"backButton\":\"LocationInfo_backButton__rQX-L\",\"topWrapper\":\"LocationInfo_topWrapper__3ZxdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootWrapper\":\"ForecastedWeather_rootWrapper__ajVDt\",\"cardListWrapper\":\"ForecastedWeather_cardListWrapper__1AUQO\",\"dayCardWrapper\":\"ForecastedWeather_dayCardWrapper__2ewgw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"PlaceSelectionForm_clearfix__1NAbY\",\"submitButton\":\"PlaceSelectionForm_submitButton__1Yjlo\",\"rootWrapper\":\"PlaceSelectionForm_rootWrapper__31Umt\",\"autocompleteWrapper\":\"PlaceSelectionForm_autocompleteWrapper__23LLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"CoordinateSelectionForm_clearfix__3vMBn\",\"submitButton\":\"CoordinateSelectionForm_submitButton__x4Y6q\",\"rootWrapper\":\"CoordinateSelectionForm_rootWrapper__1jj6K\",\"form\":\"CoordinateSelectionForm_form__1v3ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"PageErrorBoundary_clearfix__3e3kG\",\"heading\":\"PageErrorBoundary_heading__3TorP\",\"errorMessage\":\"PageErrorBoundary_errorMessage__1M5TX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"Footer_clearfix__HOrS1\",\"rootWrapper\":\"Footer_rootWrapper__3uqrO\",\"rights\":\"Footer_rights__3TCn_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearfix\":\"DayCard_clearfix__N2Tzp\",\"showMoreButton\":\"DayCard_showMoreButton__32ufa\",\"rootWrapper\":\"DayCard_rootWrapper__dr0A1\",\"rootWrapperActive\":\"DayCard_rootWrapperActive__2-n7T\",\"currentDate\":\"DayCard_currentDate__23fLz\",\"weatherConditionSection\":\"DayCard_weatherConditionSection__Gavt5\",\"weatherConditionIconWrapper\":\"DayCard_weatherConditionIconWrapper__1W8mT\",\"weatherConditionDescription\":\"DayCard_weatherConditionDescription__36dPn\",\"temperatureSection\":\"DayCard_temperatureSection__MR4F6\",\"temperatureRow\":\"DayCard_temperatureRow__39epo\",\"temperatureHalfSection\":\"DayCard_temperatureHalfSection__24yni\",\"temperaturePrefix\":\"DayCard_temperaturePrefix__2Xd-J\",\"temperatureValue\":\"DayCard_temperatureValue__3ZasW\",\"temperaturePostfix\":\"DayCard_temperaturePostfix__8TQB7\"};","module.exports = __webpack_public_path__ + \"static/media/sunrise.5866ae6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunset.98817751.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain-316579_1280.c48150b3.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundHolder\":\"TopLevelLayout_backgroundHolder__3I8VE\"};"],"sourceRoot":""}